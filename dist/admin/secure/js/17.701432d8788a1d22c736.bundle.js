(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{326:function(t,e,i){"use strict";var n=i(7),s=i(35),a=i(16),o=i(327),r=i.n(o);e.a=function t(e,i,o){var c=this,l=i.readViews,u=i.preloadViews,d=i.getListByKey,h=e.label,b=e.path,p=e.type,f=e.access,m=e.isOrderable,w=e.isPrimaryKey,y=e.isRequired,O=e.isReadOnly,j=e.adminDoc,g=e.defaultValue,v=Object(n.a)(e,["label","path","type","access","isOrderable","isPrimaryKey","isRequired","isReadOnly","adminDoc","defaultValue"]);Object(s.a)(this,t),Object(a.a)(this,"getQueryFragment",(function(){return c.path})),Object(a.a)(this,"serialize",(function(t){return t[c.path]||null})),Object(a.a)(this,"validateInput",(function(){})),Object(a.a)(this,"deserialize",(function(t){return t[c.path]})),Object(a.a)(this,"hasChanged",(function(t,e){return!r()(t[c.path],e[c.path])})),Object(a.a)(this,"getDefaultValue",(function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=t.originalInput,i=void 0===e?{}:e,n=t.prefill,s=void 0===n?{}:n;return c._getDefaultValue({originalInput:i,prefill:s})})),Object(a.a)(this,"initCellView",(function(){var t=c.views.Cell;t&&c.readViews([t])})),Object(a.a)(this,"initFieldView",(function(){var t=c.views.Field;t&&c.readViews([t])})),Object(a.a)(this,"initFilterView",(function(){var t=c.views.Filter;t&&c.readViews([t])})),Object(a.a)(this,"getFilterTypes",(function(){return[]})),Object(a.a)(this,"getFilterValue",(function(t){return t})),this.config=v,this.label=h,this.path=b,this.type=p,this.maybeAccess=f,this.isOrderable=m,this.isPrimaryKey=w,this.isRequired=y,this.isReadOnly=O,this.adminDoc=j,this.readViews=l,this.preloadViews=u,this.getListByKey=d,this.views=o,this._getDefaultValue="function"!=typeof g?function(t){return t.prefill[c.path]||g}:g}},544:function(t,e){t.exports=function t(e,n){if(!e){var s=new i(n);throw Error.captureStackTrace&&Error.captureStackTrace(s,t),s}};class i extends Error{}i.prototype.name="AssertionError"},741:function(t,e,i){"use strict";i.r(e);var n=i(6),s=i(7),a=i(16),o=i(44),r=i(211),c=i.n(r),l=i(11),u=i(330),d=i(326),h=i(544),b=i.n(h);const p=()=>{};function f(t,{visitDocument:e=p,visitBlock:i=p,visitInline:n=p,visitText:s=p,defaultVisitor:a=l.d}){return function t(e,i){const n=e=>t(e,i);let s=null;switch(e.object){case"document":s=i.visitDocument(e,n);break;case"block":s=i.visitBlock(e,n);break;case"inline":s=i.visitInline(e,n);break;case"text":s=i.visitText(e,n);break;default:throw new Error(`Encountered unknown type '${e.object}' in Slate document`)}return s||(s=i.defaultVisitor(e,n)),s}(t,{visitDocument:e,visitBlock:i,visitInline:n,visitText:s,defaultVisitor:a})}function m(t,e){const i={},s=f(t.document,{visitBlock(n){const s=e[n.type];if(!s||"function"!=typeof s.serialize)return;const{mutations:a,node:o}=s.serialize({value:t,node:n,blocks:e});if(a&&Object.keys(a).length){if(!o)throw new Error(`Must return a serialized 'node' when returning 'mutations'. See '${s.constructor.name}#serialize()'.`);if(!s.path)throw new Error(`No mutation path set for block view type '${s.type}'. Ensure the block's view exports a 'path' key corresponding to the mutation path for saving block data`);i[s.path]=i[s.path]||{disconnectAll:!0},o.data=o.data||{},o.data._mutationPaths=o.data._mutationPaths||[],Object.entries(a).forEach(([t,e])=>{i[s.path][t]=i[s.path][t]||[],(e=Array.isArray(e)?e:[e]).forEach(e=>{const n=i[s.path][t].push(e),a=`${s.path}.${t}[${n-1}]`;o.data._mutationPaths.push(a)})})}return o||null},defaultVisitor(t,e){const i=function(t){return t.nodes?t.set("nodes",u.i.createList()).toJSON():t.toJSON()}(t);return t.nodes&&(i.nodes=t.nodes.map(t=>e(t)).toJSON()),i}});return Object(n.a)({document:s},i)}const w={document:{nodes:[{object:"block",type:"paragraph",nodes:[{object:"text",text:""}]}]}};class y extends d.a{constructor(t,...e){let{defaultValue:i=u.n.fromJSON(w)}=t,r=Object(s.a)(t,["defaultValue"]);super(Object(n.a)(Object(n.a)({},r),{},{defaultValue:i}),...e),Object(a.a)(this,"getFilterGraphQL",({type:t,value:e})=>({["is"===t?""+this.path:`${this.path}_${t}`]:e})),Object(a.a)(this,"getFilterLabel",({label:t})=>`${this.label} ${t.toLowerCase()}`),Object(a.a)(this,"formatFilter",({label:t,value:e})=>`${this.getFilterLabel({label:t})}: "${e}"`),Object(a.a)(this,"getFilterTypes",()=>[{type:"contains",label:"Contains",getInitialValue:()=>""},{type:"not_contains",label:"Does not contain",getInitialValue:()=>""}]),Object(a.a)(this,"getBlocksSync",()=>{try{return this.getBlocks()}catch(t){if(c()(t))throw new Error("`Content#getBlocks()` threw a Promise. This may occur when calling `Content#(de)serialize()` before blocks have had a chance to fully load.");throw t}}),Object(a.a)(this,"serialize",t=>{const{path:e}=this;if(!t[e]||!t[e].document)return{document:null};const i=this.getBlocksSync(),n=m(t[e],i);return n.document=JSON.stringify(n.document),{disconnectAll:!0,create:n}}),Object(a.a)(this,"deserialize",t=>{const{path:e}=this;if(!t[e]||!t[e].document)return u.n.fromJSON(w);const i=this.getBlocksSync(),a=Object(n.a)(Object(n.a)({},t[e]),{},{document:JSON.parse(t[e].document)});return a.document.nodes=a.document.nodes.filter(t=>"oEmbed"!==t.type||!!(t.data&&t.data._joinIds&&t.data._joinIds.length)&&a.oEmbeds.find(e=>e.id===t.data._joinIds[0])),function(t,e){let{document:i}=t,n=Object(s.a)(t,["document"]);b()(!!i,"Must pass document to deserialize()"),b()(!!e,"Must pass blocks to deserialize()");const a=u.n.fromJSON({document:i});return a.set("document",f(a.document,{visitBlock(t){const i=e[t.type];if(!i||"function"!=typeof i.deserialize)return;const s=n[i.path],a=t.get("data"),o=(a&&a.size&&a.get("_joinIds")||[]).map(t=>s.find(({id:e})=>t===e)),r=i.deserialize({node:t,joins:o,blocks:e});if(r){if(!u.i.isNode(r))throw new Error(i.constructor.name+"#deserialize() must return a Slate.js Node.");return r}},defaultVisitor:(t,e)=>t.nodes?t.set("nodes",t.nodes.map(e)):t}))}(a,i)}),Object(a.a)(this,"getQueryFragment",()=>`\n    ${this.path} {\n      document\n      ${Object.values(this.config.blockOptions).map(({query:t})=>t).filter(Boolean).join("\n")}\n    }\n  `),Object(a.a)(this,"initFieldView",()=>{Object(l.b)([()=>{const{Field:t}=this.views;t&&this.readViews([t])},()=>this.getBlocks()])}),Object(a.a)(this,"initCellView",()=>{Object(l.b)([()=>{const{Cell:t}=this.views;t&&this.readViews([t])},()=>this.getBlocks()])}),Object(a.a)(this,"initFilterView",()=>{Object(l.b)([()=>{const{Filter:t}=this.views;t&&this.readViews([t])},()=>this.getBlocks()])}),this.getBlocks=Object(o.a)(()=>{const t=this.readViews(this.views.blocks).map(t=>Object(n.a)(Object(n.a)({},t),{},{options:Object(n.a)(Object(n.a)({},this.config.blockOptions[t.type]),{},{readViews:this.readViews}),withChrome:this.config.blockTypes.includes(t.type)}));return t.reduce((t,e)=>{if(!e.type)return t;if(t[e.type])throw new Error(`Encountered more than one Content block with type of '${e.type}'. Content blocks must have globally unique types.`);if(void 0===e.Node)throw new Error(`Unable to load Content block '${e.type}': no 'Node' export found.`);return t[e.type]=e,t},{})})}}e.default=y}}]);